
DEI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007d8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000007e0  00000000  00000000  0000082c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000003e9  00000000  00000000  0000100c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__vector_1>
   8:	0c 94 9b 00 	jmp	0x136	; 0x136 <__vector_2>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <main>
  64:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DEI_vidInit>:
#include "DIO.h"



void DEI_vidInit()
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	Set_Bit(SREG,7);  // enable gi
  74:	af e5       	ldi	r26, 0x5F	; 95
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ef e5       	ldi	r30, 0x5F	; 95
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	80 68       	ori	r24, 0x80	; 128
  80:	8c 93       	st	X, r24

	Set_Bit(MCUCR,1);// Trigger mode
  82:	a5 e5       	ldi	r26, 0x55	; 85
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	e5 e5       	ldi	r30, 0x55	; 85
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	8c 93       	st	X, r24
	Clr_Bit(MCUCR,0); // Trigger mode
  90:	a5 e5       	ldi	r26, 0x55	; 85
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	e5 e5       	ldi	r30, 0x55	; 85
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	8e 7f       	andi	r24, 0xFE	; 254
  9c:	8c 93       	st	X, r24
	Set_Bit(GICR,6); // Enable PIE of DEI INT 0
  9e:	ab e5       	ldi	r26, 0x5B	; 91
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	eb e5       	ldi	r30, 0x5B	; 91
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	80 64       	ori	r24, 0x40	; 64
  aa:	8c 93       	st	X, r24

	Set_Bit(MCUCR,3);// Trigger mode
  ac:	a5 e5       	ldi	r26, 0x55	; 85
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	e5 e5       	ldi	r30, 0x55	; 85
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	88 60       	ori	r24, 0x08	; 8
  b8:	8c 93       	st	X, r24
	Clr_Bit(MCUCR,2); // Trigger mode
  ba:	a5 e5       	ldi	r26, 0x55	; 85
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	e5 e5       	ldi	r30, 0x55	; 85
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	8b 7f       	andi	r24, 0xFB	; 251
  c6:	8c 93       	st	X, r24
	Set_Bit(GICR,7); // Enable PIE of DEi INT1
  c8:	ab e5       	ldi	r26, 0x5B	; 91
  ca:	b0 e0       	ldi	r27, 0x00	; 0
  cc:	eb e5       	ldi	r30, 0x5B	; 91
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	80 68       	ori	r24, 0x80	; 128
  d4:	8c 93       	st	X, r24

}
  d6:	cf 91       	pop	r28
  d8:	df 91       	pop	r29
  da:	08 95       	ret

000000dc <__vector_1>:

void __vector_1(void)  __attribute__((signal,__INTR_ATTRS));
void __vector_1(void)
{
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
  e6:	2f 93       	push	r18
  e8:	3f 93       	push	r19
  ea:	4f 93       	push	r20
  ec:	5f 93       	push	r21
  ee:	6f 93       	push	r22
  f0:	7f 93       	push	r23
  f2:	8f 93       	push	r24
  f4:	9f 93       	push	r25
  f6:	af 93       	push	r26
  f8:	bf 93       	push	r27
  fa:	ef 93       	push	r30
  fc:	ff 93       	push	r31
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
	DIO_vidWritePinValue(a,pin0,high);
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	41 e0       	ldi	r20, 0x01	; 1
 10c:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidWritePinValue>
}
 110:	cf 91       	pop	r28
 112:	df 91       	pop	r29
 114:	ff 91       	pop	r31
 116:	ef 91       	pop	r30
 118:	bf 91       	pop	r27
 11a:	af 91       	pop	r26
 11c:	9f 91       	pop	r25
 11e:	8f 91       	pop	r24
 120:	7f 91       	pop	r23
 122:	6f 91       	pop	r22
 124:	5f 91       	pop	r21
 126:	4f 91       	pop	r20
 128:	3f 91       	pop	r19
 12a:	2f 91       	pop	r18
 12c:	0f 90       	pop	r0
 12e:	0f be       	out	0x3f, r0	; 63
 130:	0f 90       	pop	r0
 132:	1f 90       	pop	r1
 134:	18 95       	reti

00000136 <__vector_2>:


void __vector_2(void)  __attribute__((signal,__INTR_ATTRS));
void __vector_2(void)
{
 136:	1f 92       	push	r1
 138:	0f 92       	push	r0
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	0f 92       	push	r0
 13e:	11 24       	eor	r1, r1
 140:	2f 93       	push	r18
 142:	3f 93       	push	r19
 144:	4f 93       	push	r20
 146:	5f 93       	push	r21
 148:	6f 93       	push	r22
 14a:	7f 93       	push	r23
 14c:	8f 93       	push	r24
 14e:	9f 93       	push	r25
 150:	af 93       	push	r26
 152:	bf 93       	push	r27
 154:	ef 93       	push	r30
 156:	ff 93       	push	r31
 158:	df 93       	push	r29
 15a:	cf 93       	push	r28
 15c:	cd b7       	in	r28, 0x3d	; 61
 15e:	de b7       	in	r29, 0x3e	; 62
	DIO_vidWritePinValue(a,pin0,low);
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	40 e0       	ldi	r20, 0x00	; 0
 166:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidWritePinValue>
}
 16a:	cf 91       	pop	r28
 16c:	df 91       	pop	r29
 16e:	ff 91       	pop	r31
 170:	ef 91       	pop	r30
 172:	bf 91       	pop	r27
 174:	af 91       	pop	r26
 176:	9f 91       	pop	r25
 178:	8f 91       	pop	r24
 17a:	7f 91       	pop	r23
 17c:	6f 91       	pop	r22
 17e:	5f 91       	pop	r21
 180:	4f 91       	pop	r20
 182:	3f 91       	pop	r19
 184:	2f 91       	pop	r18
 186:	0f 90       	pop	r0
 188:	0f be       	out	0x3f, r0	; 63
 18a:	0f 90       	pop	r0
 18c:	1f 90       	pop	r1
 18e:	18 95       	reti

00000190 <DIO_vidSetPinDir>:
#include "DIO.h"



void DIO_vidSetPinDir (u8 port,u8 pin,u8 dir)
{
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	00 d0       	rcall	.+0      	; 0x196 <DIO_vidSetPinDir+0x6>
 196:	00 d0       	rcall	.+0      	; 0x198 <DIO_vidSetPinDir+0x8>
 198:	0f 92       	push	r0
 19a:	cd b7       	in	r28, 0x3d	; 61
 19c:	de b7       	in	r29, 0x3e	; 62
 19e:	89 83       	std	Y+1, r24	; 0x01
 1a0:	6a 83       	std	Y+2, r22	; 0x02
 1a2:	4b 83       	std	Y+3, r20	; 0x03
	switch(port)
 1a4:	89 81       	ldd	r24, Y+1	; 0x01
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	3d 83       	std	Y+5, r19	; 0x05
 1ac:	2c 83       	std	Y+4, r18	; 0x04
 1ae:	8c 81       	ldd	r24, Y+4	; 0x04
 1b0:	9d 81       	ldd	r25, Y+5	; 0x05
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	91 05       	cpc	r25, r1
 1b6:	09 f4       	brne	.+2      	; 0x1ba <DIO_vidSetPinDir+0x2a>
 1b8:	46 c0       	rjmp	.+140    	; 0x246 <DIO_vidSetPinDir+0xb6>
 1ba:	2c 81       	ldd	r18, Y+4	; 0x04
 1bc:	3d 81       	ldd	r19, Y+5	; 0x05
 1be:	22 30       	cpi	r18, 0x02	; 2
 1c0:	31 05       	cpc	r19, r1
 1c2:	2c f4       	brge	.+10     	; 0x1ce <DIO_vidSetPinDir+0x3e>
 1c4:	8c 81       	ldd	r24, Y+4	; 0x04
 1c6:	9d 81       	ldd	r25, Y+5	; 0x05
 1c8:	00 97       	sbiw	r24, 0x00	; 0
 1ca:	71 f0       	breq	.+28     	; 0x1e8 <DIO_vidSetPinDir+0x58>
 1cc:	c7 c0       	rjmp	.+398    	; 0x35c <DIO_vidSetPinDir+0x1cc>
 1ce:	2c 81       	ldd	r18, Y+4	; 0x04
 1d0:	3d 81       	ldd	r19, Y+5	; 0x05
 1d2:	22 30       	cpi	r18, 0x02	; 2
 1d4:	31 05       	cpc	r19, r1
 1d6:	09 f4       	brne	.+2      	; 0x1da <DIO_vidSetPinDir+0x4a>
 1d8:	65 c0       	rjmp	.+202    	; 0x2a4 <DIO_vidSetPinDir+0x114>
 1da:	8c 81       	ldd	r24, Y+4	; 0x04
 1dc:	9d 81       	ldd	r25, Y+5	; 0x05
 1de:	83 30       	cpi	r24, 0x03	; 3
 1e0:	91 05       	cpc	r25, r1
 1e2:	09 f4       	brne	.+2      	; 0x1e6 <DIO_vidSetPinDir+0x56>
 1e4:	8e c0       	rjmp	.+284    	; 0x302 <DIO_vidSetPinDir+0x172>
 1e6:	ba c0       	rjmp	.+372    	; 0x35c <DIO_vidSetPinDir+0x1cc>
	{
	case 0:
		if(dir==input)
 1e8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ea:	88 23       	and	r24, r24
 1ec:	a1 f4       	brne	.+40     	; 0x216 <DIO_vidSetPinDir+0x86>
			Clr_Bit(DDRA,pin);
 1ee:	aa e3       	ldi	r26, 0x3A	; 58
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	ea e3       	ldi	r30, 0x3A	; 58
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_vidSetPinDir+0x7c>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_vidSetPinDir+0x78>
 210:	80 95       	com	r24
 212:	84 23       	and	r24, r20
 214:	8c 93       	st	X, r24
		if(dir==output)
 216:	8b 81       	ldd	r24, Y+3	; 0x03
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	09 f0       	breq	.+2      	; 0x21e <DIO_vidSetPinDir+0x8e>
 21c:	9f c0       	rjmp	.+318    	; 0x35c <DIO_vidSetPinDir+0x1cc>
			Set_Bit(DDRA,pin);
 21e:	aa e3       	ldi	r26, 0x3A	; 58
 220:	b0 e0       	ldi	r27, 0x00	; 0
 222:	ea e3       	ldi	r30, 0x3A	; 58
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	48 2f       	mov	r20, r24
 22a:	8a 81       	ldd	r24, Y+2	; 0x02
 22c:	28 2f       	mov	r18, r24
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 2e       	mov	r0, r18
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_vidSetPinDir+0xac>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	0a 94       	dec	r0
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_vidSetPinDir+0xa8>
 240:	84 2b       	or	r24, r20
 242:	8c 93       	st	X, r24
 244:	8b c0       	rjmp	.+278    	; 0x35c <DIO_vidSetPinDir+0x1cc>
		break;

	case 1:
			if(dir==input)
 246:	8b 81       	ldd	r24, Y+3	; 0x03
 248:	88 23       	and	r24, r24
 24a:	a1 f4       	brne	.+40     	; 0x274 <DIO_vidSetPinDir+0xe4>
				Clr_Bit(DDRB,pin);
 24c:	a7 e3       	ldi	r26, 0x37	; 55
 24e:	b0 e0       	ldi	r27, 0x00	; 0
 250:	e7 e3       	ldi	r30, 0x37	; 55
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	80 81       	ld	r24, Z
 256:	48 2f       	mov	r20, r24
 258:	8a 81       	ldd	r24, Y+2	; 0x02
 25a:	28 2f       	mov	r18, r24
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 2e       	mov	r0, r18
 264:	02 c0       	rjmp	.+4      	; 0x26a <DIO_vidSetPinDir+0xda>
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	0a 94       	dec	r0
 26c:	e2 f7       	brpl	.-8      	; 0x266 <DIO_vidSetPinDir+0xd6>
 26e:	80 95       	com	r24
 270:	84 23       	and	r24, r20
 272:	8c 93       	st	X, r24
			if(dir==output)
 274:	8b 81       	ldd	r24, Y+3	; 0x03
 276:	81 30       	cpi	r24, 0x01	; 1
 278:	09 f0       	breq	.+2      	; 0x27c <DIO_vidSetPinDir+0xec>
 27a:	70 c0       	rjmp	.+224    	; 0x35c <DIO_vidSetPinDir+0x1cc>
				Set_Bit(DDRB,pin);
 27c:	a7 e3       	ldi	r26, 0x37	; 55
 27e:	b0 e0       	ldi	r27, 0x00	; 0
 280:	e7 e3       	ldi	r30, 0x37	; 55
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 81       	ld	r24, Z
 286:	48 2f       	mov	r20, r24
 288:	8a 81       	ldd	r24, Y+2	; 0x02
 28a:	28 2f       	mov	r18, r24
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 2e       	mov	r0, r18
 294:	02 c0       	rjmp	.+4      	; 0x29a <DIO_vidSetPinDir+0x10a>
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	0a 94       	dec	r0
 29c:	e2 f7       	brpl	.-8      	; 0x296 <DIO_vidSetPinDir+0x106>
 29e:	84 2b       	or	r24, r20
 2a0:	8c 93       	st	X, r24
 2a2:	5c c0       	rjmp	.+184    	; 0x35c <DIO_vidSetPinDir+0x1cc>
			break;

	case 2:
			if(dir==input)
 2a4:	8b 81       	ldd	r24, Y+3	; 0x03
 2a6:	88 23       	and	r24, r24
 2a8:	a1 f4       	brne	.+40     	; 0x2d2 <DIO_vidSetPinDir+0x142>
				Clr_Bit(DDRC,pin);
 2aa:	a4 e3       	ldi	r26, 0x34	; 52
 2ac:	b0 e0       	ldi	r27, 0x00	; 0
 2ae:	e4 e3       	ldi	r30, 0x34	; 52
 2b0:	f0 e0       	ldi	r31, 0x00	; 0
 2b2:	80 81       	ld	r24, Z
 2b4:	48 2f       	mov	r20, r24
 2b6:	8a 81       	ldd	r24, Y+2	; 0x02
 2b8:	28 2f       	mov	r18, r24
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	02 2e       	mov	r0, r18
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_vidSetPinDir+0x138>
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	0a 94       	dec	r0
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_vidSetPinDir+0x134>
 2cc:	80 95       	com	r24
 2ce:	84 23       	and	r24, r20
 2d0:	8c 93       	st	X, r24
			if(dir==output)
 2d2:	8b 81       	ldd	r24, Y+3	; 0x03
 2d4:	81 30       	cpi	r24, 0x01	; 1
 2d6:	09 f0       	breq	.+2      	; 0x2da <DIO_vidSetPinDir+0x14a>
 2d8:	41 c0       	rjmp	.+130    	; 0x35c <DIO_vidSetPinDir+0x1cc>
				Set_Bit(DDRC,pin);
 2da:	a4 e3       	ldi	r26, 0x34	; 52
 2dc:	b0 e0       	ldi	r27, 0x00	; 0
 2de:	e4 e3       	ldi	r30, 0x34	; 52
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	80 81       	ld	r24, Z
 2e4:	48 2f       	mov	r20, r24
 2e6:	8a 81       	ldd	r24, Y+2	; 0x02
 2e8:	28 2f       	mov	r18, r24
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	02 2e       	mov	r0, r18
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <DIO_vidSetPinDir+0x168>
 2f4:	88 0f       	add	r24, r24
 2f6:	99 1f       	adc	r25, r25
 2f8:	0a 94       	dec	r0
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <DIO_vidSetPinDir+0x164>
 2fc:	84 2b       	or	r24, r20
 2fe:	8c 93       	st	X, r24
 300:	2d c0       	rjmp	.+90     	; 0x35c <DIO_vidSetPinDir+0x1cc>
			break;

	case 3:
			if(dir==input)
 302:	8b 81       	ldd	r24, Y+3	; 0x03
 304:	88 23       	and	r24, r24
 306:	a1 f4       	brne	.+40     	; 0x330 <DIO_vidSetPinDir+0x1a0>
				Clr_Bit(DDRD,pin);
 308:	a1 e3       	ldi	r26, 0x31	; 49
 30a:	b0 e0       	ldi	r27, 0x00	; 0
 30c:	e1 e3       	ldi	r30, 0x31	; 49
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	48 2f       	mov	r20, r24
 314:	8a 81       	ldd	r24, Y+2	; 0x02
 316:	28 2f       	mov	r18, r24
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	02 2e       	mov	r0, r18
 320:	02 c0       	rjmp	.+4      	; 0x326 <DIO_vidSetPinDir+0x196>
 322:	88 0f       	add	r24, r24
 324:	99 1f       	adc	r25, r25
 326:	0a 94       	dec	r0
 328:	e2 f7       	brpl	.-8      	; 0x322 <DIO_vidSetPinDir+0x192>
 32a:	80 95       	com	r24
 32c:	84 23       	and	r24, r20
 32e:	8c 93       	st	X, r24
			if(dir==output)
 330:	8b 81       	ldd	r24, Y+3	; 0x03
 332:	81 30       	cpi	r24, 0x01	; 1
 334:	99 f4       	brne	.+38     	; 0x35c <DIO_vidSetPinDir+0x1cc>
				Set_Bit(DDRD,pin);
 336:	a1 e3       	ldi	r26, 0x31	; 49
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	e1 e3       	ldi	r30, 0x31	; 49
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	80 81       	ld	r24, Z
 340:	48 2f       	mov	r20, r24
 342:	8a 81       	ldd	r24, Y+2	; 0x02
 344:	28 2f       	mov	r18, r24
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	02 2e       	mov	r0, r18
 34e:	02 c0       	rjmp	.+4      	; 0x354 <DIO_vidSetPinDir+0x1c4>
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	0a 94       	dec	r0
 356:	e2 f7       	brpl	.-8      	; 0x350 <DIO_vidSetPinDir+0x1c0>
 358:	84 2b       	or	r24, r20
 35a:	8c 93       	st	X, r24
			break;
	}
}
 35c:	0f 90       	pop	r0
 35e:	0f 90       	pop	r0
 360:	0f 90       	pop	r0
 362:	0f 90       	pop	r0
 364:	0f 90       	pop	r0
 366:	cf 91       	pop	r28
 368:	df 91       	pop	r29
 36a:	08 95       	ret

0000036c <DIO_vidWritePinValue>:

	void DIO_vidWritePinValue (u8 port,u8 pin,u8 value)
	{
 36c:	df 93       	push	r29
 36e:	cf 93       	push	r28
 370:	00 d0       	rcall	.+0      	; 0x372 <DIO_vidWritePinValue+0x6>
 372:	00 d0       	rcall	.+0      	; 0x374 <DIO_vidWritePinValue+0x8>
 374:	0f 92       	push	r0
 376:	cd b7       	in	r28, 0x3d	; 61
 378:	de b7       	in	r29, 0x3e	; 62
 37a:	89 83       	std	Y+1, r24	; 0x01
 37c:	6a 83       	std	Y+2, r22	; 0x02
 37e:	4b 83       	std	Y+3, r20	; 0x03
		switch(port)
 380:	89 81       	ldd	r24, Y+1	; 0x01
 382:	28 2f       	mov	r18, r24
 384:	30 e0       	ldi	r19, 0x00	; 0
 386:	3d 83       	std	Y+5, r19	; 0x05
 388:	2c 83       	std	Y+4, r18	; 0x04
 38a:	8c 81       	ldd	r24, Y+4	; 0x04
 38c:	9d 81       	ldd	r25, Y+5	; 0x05
 38e:	81 30       	cpi	r24, 0x01	; 1
 390:	91 05       	cpc	r25, r1
 392:	09 f4       	brne	.+2      	; 0x396 <DIO_vidWritePinValue+0x2a>
 394:	46 c0       	rjmp	.+140    	; 0x422 <DIO_vidWritePinValue+0xb6>
 396:	2c 81       	ldd	r18, Y+4	; 0x04
 398:	3d 81       	ldd	r19, Y+5	; 0x05
 39a:	22 30       	cpi	r18, 0x02	; 2
 39c:	31 05       	cpc	r19, r1
 39e:	2c f4       	brge	.+10     	; 0x3aa <DIO_vidWritePinValue+0x3e>
 3a0:	8c 81       	ldd	r24, Y+4	; 0x04
 3a2:	9d 81       	ldd	r25, Y+5	; 0x05
 3a4:	00 97       	sbiw	r24, 0x00	; 0
 3a6:	71 f0       	breq	.+28     	; 0x3c4 <DIO_vidWritePinValue+0x58>
 3a8:	c7 c0       	rjmp	.+398    	; 0x538 <DIO_vidWritePinValue+0x1cc>
 3aa:	2c 81       	ldd	r18, Y+4	; 0x04
 3ac:	3d 81       	ldd	r19, Y+5	; 0x05
 3ae:	22 30       	cpi	r18, 0x02	; 2
 3b0:	31 05       	cpc	r19, r1
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <DIO_vidWritePinValue+0x4a>
 3b4:	65 c0       	rjmp	.+202    	; 0x480 <DIO_vidWritePinValue+0x114>
 3b6:	8c 81       	ldd	r24, Y+4	; 0x04
 3b8:	9d 81       	ldd	r25, Y+5	; 0x05
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	91 05       	cpc	r25, r1
 3be:	09 f4       	brne	.+2      	; 0x3c2 <DIO_vidWritePinValue+0x56>
 3c0:	8e c0       	rjmp	.+284    	; 0x4de <DIO_vidWritePinValue+0x172>
 3c2:	ba c0       	rjmp	.+372    	; 0x538 <DIO_vidWritePinValue+0x1cc>
		{
		case 0:
			if(value==low)
 3c4:	8b 81       	ldd	r24, Y+3	; 0x03
 3c6:	88 23       	and	r24, r24
 3c8:	a1 f4       	brne	.+40     	; 0x3f2 <DIO_vidWritePinValue+0x86>
				Clr_Bit(PORTA,pin);
 3ca:	ab e3       	ldi	r26, 0x3B	; 59
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	eb e3       	ldi	r30, 0x3B	; 59
 3d0:	f0 e0       	ldi	r31, 0x00	; 0
 3d2:	80 81       	ld	r24, Z
 3d4:	48 2f       	mov	r20, r24
 3d6:	8a 81       	ldd	r24, Y+2	; 0x02
 3d8:	28 2f       	mov	r18, r24
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	02 2e       	mov	r0, r18
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_vidWritePinValue+0x7c>
 3e4:	88 0f       	add	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	0a 94       	dec	r0
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_vidWritePinValue+0x78>
 3ec:	80 95       	com	r24
 3ee:	84 23       	and	r24, r20
 3f0:	8c 93       	st	X, r24
			if(value==high)
 3f2:	8b 81       	ldd	r24, Y+3	; 0x03
 3f4:	81 30       	cpi	r24, 0x01	; 1
 3f6:	09 f0       	breq	.+2      	; 0x3fa <DIO_vidWritePinValue+0x8e>
 3f8:	9f c0       	rjmp	.+318    	; 0x538 <DIO_vidWritePinValue+0x1cc>
				Set_Bit(PORTA,pin);
 3fa:	ab e3       	ldi	r26, 0x3B	; 59
 3fc:	b0 e0       	ldi	r27, 0x00	; 0
 3fe:	eb e3       	ldi	r30, 0x3B	; 59
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	80 81       	ld	r24, Z
 404:	48 2f       	mov	r20, r24
 406:	8a 81       	ldd	r24, Y+2	; 0x02
 408:	28 2f       	mov	r18, r24
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	02 2e       	mov	r0, r18
 412:	02 c0       	rjmp	.+4      	; 0x418 <DIO_vidWritePinValue+0xac>
 414:	88 0f       	add	r24, r24
 416:	99 1f       	adc	r25, r25
 418:	0a 94       	dec	r0
 41a:	e2 f7       	brpl	.-8      	; 0x414 <DIO_vidWritePinValue+0xa8>
 41c:	84 2b       	or	r24, r20
 41e:	8c 93       	st	X, r24
 420:	8b c0       	rjmp	.+278    	; 0x538 <DIO_vidWritePinValue+0x1cc>
			break;

		case 1:
				if(value==low)
 422:	8b 81       	ldd	r24, Y+3	; 0x03
 424:	88 23       	and	r24, r24
 426:	a1 f4       	brne	.+40     	; 0x450 <DIO_vidWritePinValue+0xe4>
					Clr_Bit(PORTB,pin);
 428:	a8 e3       	ldi	r26, 0x38	; 56
 42a:	b0 e0       	ldi	r27, 0x00	; 0
 42c:	e8 e3       	ldi	r30, 0x38	; 56
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	80 81       	ld	r24, Z
 432:	48 2f       	mov	r20, r24
 434:	8a 81       	ldd	r24, Y+2	; 0x02
 436:	28 2f       	mov	r18, r24
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	02 2e       	mov	r0, r18
 440:	02 c0       	rjmp	.+4      	; 0x446 <DIO_vidWritePinValue+0xda>
 442:	88 0f       	add	r24, r24
 444:	99 1f       	adc	r25, r25
 446:	0a 94       	dec	r0
 448:	e2 f7       	brpl	.-8      	; 0x442 <DIO_vidWritePinValue+0xd6>
 44a:	80 95       	com	r24
 44c:	84 23       	and	r24, r20
 44e:	8c 93       	st	X, r24
				if(value==high)
 450:	8b 81       	ldd	r24, Y+3	; 0x03
 452:	81 30       	cpi	r24, 0x01	; 1
 454:	09 f0       	breq	.+2      	; 0x458 <DIO_vidWritePinValue+0xec>
 456:	70 c0       	rjmp	.+224    	; 0x538 <DIO_vidWritePinValue+0x1cc>
					Set_Bit(PORTB,pin);
 458:	a8 e3       	ldi	r26, 0x38	; 56
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	e8 e3       	ldi	r30, 0x38	; 56
 45e:	f0 e0       	ldi	r31, 0x00	; 0
 460:	80 81       	ld	r24, Z
 462:	48 2f       	mov	r20, r24
 464:	8a 81       	ldd	r24, Y+2	; 0x02
 466:	28 2f       	mov	r18, r24
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	02 2e       	mov	r0, r18
 470:	02 c0       	rjmp	.+4      	; 0x476 <DIO_vidWritePinValue+0x10a>
 472:	88 0f       	add	r24, r24
 474:	99 1f       	adc	r25, r25
 476:	0a 94       	dec	r0
 478:	e2 f7       	brpl	.-8      	; 0x472 <DIO_vidWritePinValue+0x106>
 47a:	84 2b       	or	r24, r20
 47c:	8c 93       	st	X, r24
 47e:	5c c0       	rjmp	.+184    	; 0x538 <DIO_vidWritePinValue+0x1cc>
				break;

		case 2:
				if(value==low)
 480:	8b 81       	ldd	r24, Y+3	; 0x03
 482:	88 23       	and	r24, r24
 484:	a1 f4       	brne	.+40     	; 0x4ae <DIO_vidWritePinValue+0x142>
					Clr_Bit(PORTC,pin);
 486:	a5 e3       	ldi	r26, 0x35	; 53
 488:	b0 e0       	ldi	r27, 0x00	; 0
 48a:	e5 e3       	ldi	r30, 0x35	; 53
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	48 2f       	mov	r20, r24
 492:	8a 81       	ldd	r24, Y+2	; 0x02
 494:	28 2f       	mov	r18, r24
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	02 2e       	mov	r0, r18
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <DIO_vidWritePinValue+0x138>
 4a0:	88 0f       	add	r24, r24
 4a2:	99 1f       	adc	r25, r25
 4a4:	0a 94       	dec	r0
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <DIO_vidWritePinValue+0x134>
 4a8:	80 95       	com	r24
 4aa:	84 23       	and	r24, r20
 4ac:	8c 93       	st	X, r24
				if(value==high)
 4ae:	8b 81       	ldd	r24, Y+3	; 0x03
 4b0:	81 30       	cpi	r24, 0x01	; 1
 4b2:	09 f0       	breq	.+2      	; 0x4b6 <DIO_vidWritePinValue+0x14a>
 4b4:	41 c0       	rjmp	.+130    	; 0x538 <DIO_vidWritePinValue+0x1cc>
					Set_Bit(PORTC,pin);
 4b6:	a5 e3       	ldi	r26, 0x35	; 53
 4b8:	b0 e0       	ldi	r27, 0x00	; 0
 4ba:	e5 e3       	ldi	r30, 0x35	; 53
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	80 81       	ld	r24, Z
 4c0:	48 2f       	mov	r20, r24
 4c2:	8a 81       	ldd	r24, Y+2	; 0x02
 4c4:	28 2f       	mov	r18, r24
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	02 2e       	mov	r0, r18
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <DIO_vidWritePinValue+0x168>
 4d0:	88 0f       	add	r24, r24
 4d2:	99 1f       	adc	r25, r25
 4d4:	0a 94       	dec	r0
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <DIO_vidWritePinValue+0x164>
 4d8:	84 2b       	or	r24, r20
 4da:	8c 93       	st	X, r24
 4dc:	2d c0       	rjmp	.+90     	; 0x538 <DIO_vidWritePinValue+0x1cc>
				break;

		case 3:
				if(value==low)
 4de:	8b 81       	ldd	r24, Y+3	; 0x03
 4e0:	88 23       	and	r24, r24
 4e2:	a1 f4       	brne	.+40     	; 0x50c <DIO_vidWritePinValue+0x1a0>
					Clr_Bit(PORTD,pin);
 4e4:	a2 e3       	ldi	r26, 0x32	; 50
 4e6:	b0 e0       	ldi	r27, 0x00	; 0
 4e8:	e2 e3       	ldi	r30, 0x32	; 50
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	80 81       	ld	r24, Z
 4ee:	48 2f       	mov	r20, r24
 4f0:	8a 81       	ldd	r24, Y+2	; 0x02
 4f2:	28 2f       	mov	r18, r24
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	02 2e       	mov	r0, r18
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <DIO_vidWritePinValue+0x196>
 4fe:	88 0f       	add	r24, r24
 500:	99 1f       	adc	r25, r25
 502:	0a 94       	dec	r0
 504:	e2 f7       	brpl	.-8      	; 0x4fe <DIO_vidWritePinValue+0x192>
 506:	80 95       	com	r24
 508:	84 23       	and	r24, r20
 50a:	8c 93       	st	X, r24
				if(value==high)
 50c:	8b 81       	ldd	r24, Y+3	; 0x03
 50e:	81 30       	cpi	r24, 0x01	; 1
 510:	99 f4       	brne	.+38     	; 0x538 <DIO_vidWritePinValue+0x1cc>
					Set_Bit(PORTD,pin);
 512:	a2 e3       	ldi	r26, 0x32	; 50
 514:	b0 e0       	ldi	r27, 0x00	; 0
 516:	e2 e3       	ldi	r30, 0x32	; 50
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	80 81       	ld	r24, Z
 51c:	48 2f       	mov	r20, r24
 51e:	8a 81       	ldd	r24, Y+2	; 0x02
 520:	28 2f       	mov	r18, r24
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	02 2e       	mov	r0, r18
 52a:	02 c0       	rjmp	.+4      	; 0x530 <DIO_vidWritePinValue+0x1c4>
 52c:	88 0f       	add	r24, r24
 52e:	99 1f       	adc	r25, r25
 530:	0a 94       	dec	r0
 532:	e2 f7       	brpl	.-8      	; 0x52c <DIO_vidWritePinValue+0x1c0>
 534:	84 2b       	or	r24, r20
 536:	8c 93       	st	X, r24
				break;
		}
	}
 538:	0f 90       	pop	r0
 53a:	0f 90       	pop	r0
 53c:	0f 90       	pop	r0
 53e:	0f 90       	pop	r0
 540:	0f 90       	pop	r0
 542:	cf 91       	pop	r28
 544:	df 91       	pop	r29
 546:	08 95       	ret

00000548 <DIO_u8ReadPinValue>:

	u8 DIO_u8ReadPinValue(u8 port, u8 pin)
	{
 548:	df 93       	push	r29
 54a:	cf 93       	push	r28
 54c:	00 d0       	rcall	.+0      	; 0x54e <DIO_u8ReadPinValue+0x6>
 54e:	00 d0       	rcall	.+0      	; 0x550 <DIO_u8ReadPinValue+0x8>
 550:	0f 92       	push	r0
 552:	cd b7       	in	r28, 0x3d	; 61
 554:	de b7       	in	r29, 0x3e	; 62
 556:	89 83       	std	Y+1, r24	; 0x01
 558:	6a 83       	std	Y+2, r22	; 0x02
		switch(port)
 55a:	89 81       	ldd	r24, Y+1	; 0x01
 55c:	28 2f       	mov	r18, r24
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	3d 83       	std	Y+5, r19	; 0x05
 562:	2c 83       	std	Y+4, r18	; 0x04
 564:	4c 81       	ldd	r20, Y+4	; 0x04
 566:	5d 81       	ldd	r21, Y+5	; 0x05
 568:	41 30       	cpi	r20, 0x01	; 1
 56a:	51 05       	cpc	r21, r1
 56c:	b1 f1       	breq	.+108    	; 0x5da <DIO_u8ReadPinValue+0x92>
 56e:	8c 81       	ldd	r24, Y+4	; 0x04
 570:	9d 81       	ldd	r25, Y+5	; 0x05
 572:	82 30       	cpi	r24, 0x02	; 2
 574:	91 05       	cpc	r25, r1
 576:	34 f4       	brge	.+12     	; 0x584 <DIO_u8ReadPinValue+0x3c>
 578:	2c 81       	ldd	r18, Y+4	; 0x04
 57a:	3d 81       	ldd	r19, Y+5	; 0x05
 57c:	21 15       	cp	r18, r1
 57e:	31 05       	cpc	r19, r1
 580:	71 f0       	breq	.+28     	; 0x59e <DIO_u8ReadPinValue+0x56>
 582:	85 c0       	rjmp	.+266    	; 0x68e <DIO_u8ReadPinValue+0x146>
 584:	4c 81       	ldd	r20, Y+4	; 0x04
 586:	5d 81       	ldd	r21, Y+5	; 0x05
 588:	42 30       	cpi	r20, 0x02	; 2
 58a:	51 05       	cpc	r21, r1
 58c:	09 f4       	brne	.+2      	; 0x590 <DIO_u8ReadPinValue+0x48>
 58e:	43 c0       	rjmp	.+134    	; 0x616 <DIO_u8ReadPinValue+0xce>
 590:	8c 81       	ldd	r24, Y+4	; 0x04
 592:	9d 81       	ldd	r25, Y+5	; 0x05
 594:	83 30       	cpi	r24, 0x03	; 3
 596:	91 05       	cpc	r25, r1
 598:	09 f4       	brne	.+2      	; 0x59c <DIO_u8ReadPinValue+0x54>
 59a:	5b c0       	rjmp	.+182    	; 0x652 <DIO_u8ReadPinValue+0x10a>
 59c:	78 c0       	rjmp	.+240    	; 0x68e <DIO_u8ReadPinValue+0x146>
		{
		case a:
			return Get_Bit(PINA,pin);
 59e:	e9 e3       	ldi	r30, 0x39	; 57
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	80 81       	ld	r24, Z
 5a4:	48 2f       	mov	r20, r24
 5a6:	50 e0       	ldi	r21, 0x00	; 0
 5a8:	8a 81       	ldd	r24, Y+2	; 0x02
 5aa:	28 2f       	mov	r18, r24
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <DIO_u8ReadPinValue+0x70>
 5b4:	88 0f       	add	r24, r24
 5b6:	99 1f       	adc	r25, r25
 5b8:	2a 95       	dec	r18
 5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <DIO_u8ReadPinValue+0x6c>
 5bc:	9a 01       	movw	r18, r20
 5be:	28 23       	and	r18, r24
 5c0:	39 23       	and	r19, r25
 5c2:	8a 81       	ldd	r24, Y+2	; 0x02
 5c4:	88 2f       	mov	r24, r24
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	a9 01       	movw	r20, r18
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <DIO_u8ReadPinValue+0x88>
 5cc:	55 95       	asr	r21
 5ce:	47 95       	ror	r20
 5d0:	8a 95       	dec	r24
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <DIO_u8ReadPinValue+0x84>
 5d4:	ca 01       	movw	r24, r20
 5d6:	8b 83       	std	Y+3, r24	; 0x03
 5d8:	5c c0       	rjmp	.+184    	; 0x692 <DIO_u8ReadPinValue+0x14a>
			break;
		case b:
			return Get_Bit(PINB,pin);
 5da:	e6 e3       	ldi	r30, 0x36	; 54
 5dc:	f0 e0       	ldi	r31, 0x00	; 0
 5de:	80 81       	ld	r24, Z
 5e0:	48 2f       	mov	r20, r24
 5e2:	50 e0       	ldi	r21, 0x00	; 0
 5e4:	8a 81       	ldd	r24, Y+2	; 0x02
 5e6:	28 2f       	mov	r18, r24
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	81 e0       	ldi	r24, 0x01	; 1
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <DIO_u8ReadPinValue+0xac>
 5f0:	88 0f       	add	r24, r24
 5f2:	99 1f       	adc	r25, r25
 5f4:	2a 95       	dec	r18
 5f6:	e2 f7       	brpl	.-8      	; 0x5f0 <DIO_u8ReadPinValue+0xa8>
 5f8:	9a 01       	movw	r18, r20
 5fa:	28 23       	and	r18, r24
 5fc:	39 23       	and	r19, r25
 5fe:	8a 81       	ldd	r24, Y+2	; 0x02
 600:	88 2f       	mov	r24, r24
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	a9 01       	movw	r20, r18
 606:	02 c0       	rjmp	.+4      	; 0x60c <DIO_u8ReadPinValue+0xc4>
 608:	55 95       	asr	r21
 60a:	47 95       	ror	r20
 60c:	8a 95       	dec	r24
 60e:	e2 f7       	brpl	.-8      	; 0x608 <DIO_u8ReadPinValue+0xc0>
 610:	ca 01       	movw	r24, r20
 612:	8b 83       	std	Y+3, r24	; 0x03
 614:	3e c0       	rjmp	.+124    	; 0x692 <DIO_u8ReadPinValue+0x14a>
			break;
		case c:
			return Get_Bit(PINC,pin);
 616:	e3 e3       	ldi	r30, 0x33	; 51
 618:	f0 e0       	ldi	r31, 0x00	; 0
 61a:	80 81       	ld	r24, Z
 61c:	48 2f       	mov	r20, r24
 61e:	50 e0       	ldi	r21, 0x00	; 0
 620:	8a 81       	ldd	r24, Y+2	; 0x02
 622:	28 2f       	mov	r18, r24
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	81 e0       	ldi	r24, 0x01	; 1
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	02 c0       	rjmp	.+4      	; 0x630 <DIO_u8ReadPinValue+0xe8>
 62c:	88 0f       	add	r24, r24
 62e:	99 1f       	adc	r25, r25
 630:	2a 95       	dec	r18
 632:	e2 f7       	brpl	.-8      	; 0x62c <DIO_u8ReadPinValue+0xe4>
 634:	9a 01       	movw	r18, r20
 636:	28 23       	and	r18, r24
 638:	39 23       	and	r19, r25
 63a:	8a 81       	ldd	r24, Y+2	; 0x02
 63c:	88 2f       	mov	r24, r24
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	a9 01       	movw	r20, r18
 642:	02 c0       	rjmp	.+4      	; 0x648 <DIO_u8ReadPinValue+0x100>
 644:	55 95       	asr	r21
 646:	47 95       	ror	r20
 648:	8a 95       	dec	r24
 64a:	e2 f7       	brpl	.-8      	; 0x644 <DIO_u8ReadPinValue+0xfc>
 64c:	ca 01       	movw	r24, r20
 64e:	8b 83       	std	Y+3, r24	; 0x03
 650:	20 c0       	rjmp	.+64     	; 0x692 <DIO_u8ReadPinValue+0x14a>
			break;
		case d:
			return Get_Bit(PIND,pin);
 652:	e0 e3       	ldi	r30, 0x30	; 48
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	80 81       	ld	r24, Z
 658:	48 2f       	mov	r20, r24
 65a:	50 e0       	ldi	r21, 0x00	; 0
 65c:	8a 81       	ldd	r24, Y+2	; 0x02
 65e:	28 2f       	mov	r18, r24
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	81 e0       	ldi	r24, 0x01	; 1
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	02 c0       	rjmp	.+4      	; 0x66c <DIO_u8ReadPinValue+0x124>
 668:	88 0f       	add	r24, r24
 66a:	99 1f       	adc	r25, r25
 66c:	2a 95       	dec	r18
 66e:	e2 f7       	brpl	.-8      	; 0x668 <DIO_u8ReadPinValue+0x120>
 670:	9a 01       	movw	r18, r20
 672:	28 23       	and	r18, r24
 674:	39 23       	and	r19, r25
 676:	8a 81       	ldd	r24, Y+2	; 0x02
 678:	88 2f       	mov	r24, r24
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	a9 01       	movw	r20, r18
 67e:	02 c0       	rjmp	.+4      	; 0x684 <DIO_u8ReadPinValue+0x13c>
 680:	55 95       	asr	r21
 682:	47 95       	ror	r20
 684:	8a 95       	dec	r24
 686:	e2 f7       	brpl	.-8      	; 0x680 <DIO_u8ReadPinValue+0x138>
 688:	ca 01       	movw	r24, r20
 68a:	8b 83       	std	Y+3, r24	; 0x03
 68c:	02 c0       	rjmp	.+4      	; 0x692 <DIO_u8ReadPinValue+0x14a>
			break;
		default :
			return port;
 68e:	59 81       	ldd	r21, Y+1	; 0x01
 690:	5b 83       	std	Y+3, r21	; 0x03
 692:	8b 81       	ldd	r24, Y+3	; 0x03
			break;
		}


	}
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	0f 90       	pop	r0
 69a:	0f 90       	pop	r0
 69c:	0f 90       	pop	r0
 69e:	cf 91       	pop	r28
 6a0:	df 91       	pop	r29
 6a2:	08 95       	ret

000006a4 <DIO_vidSetPortDir>:

	void DIO_vidSetPortDir(u8 port, u8 Dir)
		{
 6a4:	df 93       	push	r29
 6a6:	cf 93       	push	r28
 6a8:	00 d0       	rcall	.+0      	; 0x6aa <DIO_vidSetPortDir+0x6>
 6aa:	00 d0       	rcall	.+0      	; 0x6ac <DIO_vidSetPortDir+0x8>
 6ac:	cd b7       	in	r28, 0x3d	; 61
 6ae:	de b7       	in	r29, 0x3e	; 62
 6b0:	89 83       	std	Y+1, r24	; 0x01
 6b2:	6a 83       	std	Y+2, r22	; 0x02
			switch(port)
 6b4:	89 81       	ldd	r24, Y+1	; 0x01
 6b6:	28 2f       	mov	r18, r24
 6b8:	30 e0       	ldi	r19, 0x00	; 0
 6ba:	3c 83       	std	Y+4, r19	; 0x04
 6bc:	2b 83       	std	Y+3, r18	; 0x03
 6be:	8b 81       	ldd	r24, Y+3	; 0x03
 6c0:	9c 81       	ldd	r25, Y+4	; 0x04
 6c2:	81 30       	cpi	r24, 0x01	; 1
 6c4:	91 05       	cpc	r25, r1
 6c6:	d1 f0       	breq	.+52     	; 0x6fc <DIO_vidSetPortDir+0x58>
 6c8:	2b 81       	ldd	r18, Y+3	; 0x03
 6ca:	3c 81       	ldd	r19, Y+4	; 0x04
 6cc:	22 30       	cpi	r18, 0x02	; 2
 6ce:	31 05       	cpc	r19, r1
 6d0:	2c f4       	brge	.+10     	; 0x6dc <DIO_vidSetPortDir+0x38>
 6d2:	8b 81       	ldd	r24, Y+3	; 0x03
 6d4:	9c 81       	ldd	r25, Y+4	; 0x04
 6d6:	00 97       	sbiw	r24, 0x00	; 0
 6d8:	61 f0       	breq	.+24     	; 0x6f2 <DIO_vidSetPortDir+0x4e>
 6da:	1e c0       	rjmp	.+60     	; 0x718 <DIO_vidSetPortDir+0x74>
 6dc:	2b 81       	ldd	r18, Y+3	; 0x03
 6de:	3c 81       	ldd	r19, Y+4	; 0x04
 6e0:	22 30       	cpi	r18, 0x02	; 2
 6e2:	31 05       	cpc	r19, r1
 6e4:	81 f0       	breq	.+32     	; 0x706 <DIO_vidSetPortDir+0x62>
 6e6:	8b 81       	ldd	r24, Y+3	; 0x03
 6e8:	9c 81       	ldd	r25, Y+4	; 0x04
 6ea:	83 30       	cpi	r24, 0x03	; 3
 6ec:	91 05       	cpc	r25, r1
 6ee:	81 f0       	breq	.+32     	; 0x710 <DIO_vidSetPortDir+0x6c>
 6f0:	13 c0       	rjmp	.+38     	; 0x718 <DIO_vidSetPortDir+0x74>
			{
			case a:
				DDRA=Dir;
 6f2:	ea e3       	ldi	r30, 0x3A	; 58
 6f4:	f0 e0       	ldi	r31, 0x00	; 0
 6f6:	8a 81       	ldd	r24, Y+2	; 0x02
 6f8:	80 83       	st	Z, r24
 6fa:	0e c0       	rjmp	.+28     	; 0x718 <DIO_vidSetPortDir+0x74>
				break;
			case b:
				DDRB=Dir;
 6fc:	e7 e3       	ldi	r30, 0x37	; 55
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	8a 81       	ldd	r24, Y+2	; 0x02
 702:	80 83       	st	Z, r24
 704:	09 c0       	rjmp	.+18     	; 0x718 <DIO_vidSetPortDir+0x74>
				break;
			case c:
				DDRC=Dir;
 706:	e4 e3       	ldi	r30, 0x34	; 52
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	8a 81       	ldd	r24, Y+2	; 0x02
 70c:	80 83       	st	Z, r24
 70e:	04 c0       	rjmp	.+8      	; 0x718 <DIO_vidSetPortDir+0x74>
				break;
			case d:
				DDRD=Dir;
 710:	e1 e3       	ldi	r30, 0x31	; 49
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	8a 81       	ldd	r24, Y+2	; 0x02
 716:	80 83       	st	Z, r24
				break;

			}


		}
 718:	0f 90       	pop	r0
 71a:	0f 90       	pop	r0
 71c:	0f 90       	pop	r0
 71e:	0f 90       	pop	r0
 720:	cf 91       	pop	r28
 722:	df 91       	pop	r29
 724:	08 95       	ret

00000726 <DIO_vidWritePortValue>:

	void DIO_vidWritePortValue(u8 port, u8 Value)
			{
 726:	df 93       	push	r29
 728:	cf 93       	push	r28
 72a:	00 d0       	rcall	.+0      	; 0x72c <DIO_vidWritePortValue+0x6>
 72c:	00 d0       	rcall	.+0      	; 0x72e <DIO_vidWritePortValue+0x8>
 72e:	cd b7       	in	r28, 0x3d	; 61
 730:	de b7       	in	r29, 0x3e	; 62
 732:	89 83       	std	Y+1, r24	; 0x01
 734:	6a 83       	std	Y+2, r22	; 0x02
				switch(port)
 736:	89 81       	ldd	r24, Y+1	; 0x01
 738:	28 2f       	mov	r18, r24
 73a:	30 e0       	ldi	r19, 0x00	; 0
 73c:	3c 83       	std	Y+4, r19	; 0x04
 73e:	2b 83       	std	Y+3, r18	; 0x03
 740:	8b 81       	ldd	r24, Y+3	; 0x03
 742:	9c 81       	ldd	r25, Y+4	; 0x04
 744:	81 30       	cpi	r24, 0x01	; 1
 746:	91 05       	cpc	r25, r1
 748:	d1 f0       	breq	.+52     	; 0x77e <DIO_vidWritePortValue+0x58>
 74a:	2b 81       	ldd	r18, Y+3	; 0x03
 74c:	3c 81       	ldd	r19, Y+4	; 0x04
 74e:	22 30       	cpi	r18, 0x02	; 2
 750:	31 05       	cpc	r19, r1
 752:	2c f4       	brge	.+10     	; 0x75e <DIO_vidWritePortValue+0x38>
 754:	8b 81       	ldd	r24, Y+3	; 0x03
 756:	9c 81       	ldd	r25, Y+4	; 0x04
 758:	00 97       	sbiw	r24, 0x00	; 0
 75a:	61 f0       	breq	.+24     	; 0x774 <DIO_vidWritePortValue+0x4e>
 75c:	1e c0       	rjmp	.+60     	; 0x79a <DIO_vidWritePortValue+0x74>
 75e:	2b 81       	ldd	r18, Y+3	; 0x03
 760:	3c 81       	ldd	r19, Y+4	; 0x04
 762:	22 30       	cpi	r18, 0x02	; 2
 764:	31 05       	cpc	r19, r1
 766:	81 f0       	breq	.+32     	; 0x788 <DIO_vidWritePortValue+0x62>
 768:	8b 81       	ldd	r24, Y+3	; 0x03
 76a:	9c 81       	ldd	r25, Y+4	; 0x04
 76c:	83 30       	cpi	r24, 0x03	; 3
 76e:	91 05       	cpc	r25, r1
 770:	81 f0       	breq	.+32     	; 0x792 <DIO_vidWritePortValue+0x6c>
 772:	13 c0       	rjmp	.+38     	; 0x79a <DIO_vidWritePortValue+0x74>
				{
				case a:
					PORTA=Value;
 774:	eb e3       	ldi	r30, 0x3B	; 59
 776:	f0 e0       	ldi	r31, 0x00	; 0
 778:	8a 81       	ldd	r24, Y+2	; 0x02
 77a:	80 83       	st	Z, r24
 77c:	0e c0       	rjmp	.+28     	; 0x79a <DIO_vidWritePortValue+0x74>
					break;
				case b:
					PORTB=Value;
 77e:	e8 e3       	ldi	r30, 0x38	; 56
 780:	f0 e0       	ldi	r31, 0x00	; 0
 782:	8a 81       	ldd	r24, Y+2	; 0x02
 784:	80 83       	st	Z, r24
 786:	09 c0       	rjmp	.+18     	; 0x79a <DIO_vidWritePortValue+0x74>
					break;
				case c:
					PORTC=Value;
 788:	e5 e3       	ldi	r30, 0x35	; 53
 78a:	f0 e0       	ldi	r31, 0x00	; 0
 78c:	8a 81       	ldd	r24, Y+2	; 0x02
 78e:	80 83       	st	Z, r24
 790:	04 c0       	rjmp	.+8      	; 0x79a <DIO_vidWritePortValue+0x74>
					break;
				case d:
					PORTD=Value;
 792:	e2 e3       	ldi	r30, 0x32	; 50
 794:	f0 e0       	ldi	r31, 0x00	; 0
 796:	8a 81       	ldd	r24, Y+2	; 0x02
 798:	80 83       	st	Z, r24
					break;

				}


			}
 79a:	0f 90       	pop	r0
 79c:	0f 90       	pop	r0
 79e:	0f 90       	pop	r0
 7a0:	0f 90       	pop	r0
 7a2:	cf 91       	pop	r28
 7a4:	df 91       	pop	r29
 7a6:	08 95       	ret

000007a8 <main>:



void main (void)

{
 7a8:	df 93       	push	r29
 7aa:	cf 93       	push	r28
 7ac:	cd b7       	in	r28, 0x3d	; 61
 7ae:	de b7       	in	r29, 0x3e	; 62

DIO_vidSetPinDir(a,pin0,output);
 7b0:	80 e0       	ldi	r24, 0x00	; 0
 7b2:	60 e0       	ldi	r22, 0x00	; 0
 7b4:	41 e0       	ldi	r20, 0x01	; 1
 7b6:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_vidSetPinDir>
DIO_vidWritePinValue(d,pin2,high);
 7ba:	83 e0       	ldi	r24, 0x03	; 3
 7bc:	62 e0       	ldi	r22, 0x02	; 2
 7be:	41 e0       	ldi	r20, 0x01	; 1
 7c0:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidWritePinValue>
DIO_vidWritePinValue(d,pin3,high);
 7c4:	83 e0       	ldi	r24, 0x03	; 3
 7c6:	63 e0       	ldi	r22, 0x03	; 3
 7c8:	41 e0       	ldi	r20, 0x01	; 1
 7ca:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidWritePinValue>

DEI_vidInit();
 7ce:	0e 94 36 00 	call	0x6c	; 0x6c <DEI_vidInit>
 7d2:	ff cf       	rjmp	.-2      	; 0x7d2 <main+0x2a>

000007d4 <_exit>:
 7d4:	f8 94       	cli

000007d6 <__stop_program>:
 7d6:	ff cf       	rjmp	.-2      	; 0x7d6 <__stop_program>
